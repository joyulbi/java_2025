# 🌱 Spring 기반 웹 개발 통합 학습 프로젝트

> Spring MVC와 Spring Boot 구조를 단계적으로 실습하며 웹 백엔드 개발 흐름을 익히기 위한 학습형 프로젝트입니다.

---

## 📌 구성 개요

| 프로젝트 | 설명 |
|----------|------|
| `spring2025` | Spring MVC + MyBatis + JSP + AOP |
| `project001` | Spring Boot + MyBatis + JSP + Logback |

---

## 📁 디렉토리 구조

spring2025/
└── projectName/
├── src/main/java/
│ ├── controller/
│ ├── dao/
│ ├── dto/
│ ├── service/
│ └── aop/
└── src/main/resources/
├── config/
├── mybatis-config.xml
└── log4j.xml

springboot_2025_06/
└── project001/
├── src/main/java/
│ ├── controller/
│ ├── dao/
│ ├── dto/
│ └── service/
├── src/main/resources/
│ ├── mybatis/mapper/
│ ├── application.properties
│ └── logback.xml
└── src/main/webapp/WEB-INF/views/



---

## ✅ Spring MVC 프로젝트 (spring2025)

### 💡 소개
- 전통적인 Spring MVC 구조 기반
- AOP, MyBatis, 로그 설정 등 포함

### 🔧 주요 기술
- Spring Framework 4.x
- MyBatis
- JSP
- AOP (`@Aspect`)
- Log4j / SLF4J
- MySQL

### 💻 실행 방법
1. Eclipse에서 Maven Project로 import
2. `db.properties` 수정
3. Tomcat 실행 후 `http://localhost:8080/projectName/` 접속

---

## ✅ Spring Boot 프로젝트 (project001)

### 💡 소개
- 최신 Spring Boot 기반 프로젝트
- JSP 기반 View, MyBatis 매퍼 연동
- Logback 로그 설정 포함

### 🔧 주요 기술
- Spring Boot
- MyBatis
- JSP
- Logback / Log4jdbc
- Maven
- Embedded Tomcat

### 📁 주요 기능

| 기능 | 설명 |
|------|------|
| 로그인 | `AuthDao`, `auth-mapper.xml` |
| 직원 조회 | `EmpDao`, `emp-mapper.xml` |
| 테스트 응답 | `TestController` |
| 뷰 렌더링 | `service.jsp` |

### 💻 실행 방법
1. IntelliJ 또는 Eclipse에서 import
2. `application.properties` 내 DB 설정
3. `Project001Application` 실행
4. 접속: `http://localhost:8080/service`

---

## 🙋‍♀️ 작성자

- GitHub: [joyulbi](https://github.com/joyulbi)
- 목표: 전통 MVC부터 최신 Boot 구조까지 단계별 실전 백엔드 흐름 학습

---

## 📈 향후 계획

- Spring Security 인증 추가
- 게시판 CRUD + 로그인 + 세션 연동
- REST API 버전화 + 프론트 분리 (Vue/React)
- JUnit 기반 테스트 자동화

---
