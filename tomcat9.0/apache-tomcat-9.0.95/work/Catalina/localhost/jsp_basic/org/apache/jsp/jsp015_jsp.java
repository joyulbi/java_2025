/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-03-24 08:23:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class jsp015_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container card bg-info my-5\">\r\n");
      out.write("		<h3 class=\"card-header text-white\">내장객체</h3>\r\n");
      out.write("		<pre style=\"background-color: white\">\r\n");
      out.write("		1. jsp 페이지가 웹컨테이너에 의해 서블릿으로 변환 될 때\r\n");
      out.write("		2. 고정된 이름의 객체 컨테이너로 자동으로 구현\r\n");
      out.write("		3. request(요청) , response(응답), session(정보저장), out(출력)\r\n");
      out.write("		</pre>\r\n");
      out.write("	</div> <!-- 내장객체안내 -->\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container card my-5\">\r\n");
      out.write("		<h3 class=\"card-header bg-info text-white\">request(요청)</h3>\r\n");
      out.write("		<pre>\r\n");
      out.write("		1. action = \"처리 컴포넌트\"\r\n");
      out.write("		2. method = \"처리 방식\"\r\n");
      out.write("		3. name = \"사용자가 입력한 값 보관 이름\"\r\n");
      out.write("		</pre>\r\n");
      out.write("		<form action=\"jsp015_checkbox.jsp\" method=\"get\" onsubmit=\"return checkbox()\">\r\n");
      out.write("			<div class=\"mb-3 mt-3\">\r\n");
      out.write("				<label for=\"username\" class=\"form-label\">NAME:</label> <input\r\n");
      out.write("					type=\"text\" class=\"form-control\" id=\"username\"\r\n");
      out.write("					placeholder=\"Enter email\" name=\"username\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- user name -->\r\n");
      out.write("			<div class=\"form-check\">\r\n");
      out.write("				<input class=\"form-check-input\" type=\"checkbox\" id=\"check1\"\r\n");
      out.write("					name=\"option1\" value=\"dog\"> <label\r\n");
      out.write("					class=\"form-check-label\" for=\"check1\">DOG</label>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-check\">\r\n");
      out.write("				<input class=\"form-check-input\" type=\"checkbox\" id=\"check2\"\r\n");
      out.write("					name=\"option1\" value=\"cat\" > <label\r\n");
      out.write("					class=\"form-check-label\" for=\"check2\">CAT</label>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-check\">\r\n");
      out.write("				<input class=\"form-check-input\" type=\"checkbox\" id=\"check3\"\r\n");
      out.write("					name=\"option1\" value=\"pig\" > <label\r\n");
      out.write("					class=\"form-check-label\" for=\"check3\">PIG</label>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"my-3\">\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary\">전송</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("		<script> <!-- username 유효성 검사-->\r\n");
      out.write("			function checkbox(){\r\n");
      out.write("				let username = document.getElementById(\"username\");\r\n");
      out.write("				let checkboxs = document.querySelectorAll(\".form-check-input:checked\"); // 다중선택\r\n");
      out.write("				console.log(checkboxs);\r\n");
      out.write("				console.log(checkboxs.length);\r\n");
      out.write("				\r\n");
      out.write("				if(username.value===\"\"){\r\n");
      out.write("					alert(\"빈칸입니다.\");\r\n");
      out.write("					username.focus(); return false;\r\n");
      out.write("				}\r\n");
      out.write("				if(checkboxs.length == 0){\r\n");
      out.write("					alert(\"체크박스를 한 개 이상은 체크하셔야 합니다.\");\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		</script>\r\n");
      out.write("	</div> <!-- end checkbox -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container card my-5\">\r\n");
      out.write("		<h3 class=\"card-header bg-info text-white\">request(요청)-radio</h3>\r\n");
      out.write("		<form action=\"jsp015_radio.jsp\" method=\"get\" onsubmit=\"return check2()\">\r\n");
      out.write("			<div class=\"mb-3 mt-3\">\r\n");
      out.write("				<label for=\"username1\" class=\"form-label\">NAME:</label> <input\r\n");
      out.write("					type=\"text\" class=\"form-control\" id=\"username1\"\r\n");
      out.write("					placeholder=\"사용자 이름을 적어주세요!\" name=\"username\">\r\n");
      out.write("			</div> <!-- user name -->\r\n");
      out.write("			\r\n");
      out.write("			<!-- radio -->\r\n");
      out.write("			<!-- radio -->\r\n");
      out.write("			<div class=\"form-check\">\r\n");
      out.write("				<input type=\"radio\" class=\"form-check-input1\" id=\"radio1\" style=\"margin-right:10px\"\r\n");
      out.write("					name=\"optradio\" value=\"yes\">yes\r\n");
      out.write("					<label class=\"form-check-label\" for=\"radio1\"></label>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-check\">\r\n");
      out.write("				<input type=\"radio\" class=\"form-check-input1\" id=\"radio2\" style=\"margin-right:10px\"\r\n");
      out.write("					name=\"optradio\" value=\"no\">no<label\r\n");
      out.write("					class=\"form-check-label\" for=\"radio2\"></label>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-check\">\r\n");
      out.write("				<input type=\"radio\" class=\"form-check-input1\" style=\"margin-right:10px\" disabled>사용 못함-disabled\r\n");
      out.write("				<label class=\"form-check-label\"></label>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- radio -->\r\n");
      out.write("			<!-- radio -->\r\n");
      out.write("\r\n");
      out.write("			<div class=\"my-3\">\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary\">전송</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("		<script>\r\n");
      out.write("			function check2(){\r\n");
      out.write("				let username1=document.querySelector(\"#username1\");\r\n");
      out.write("				let radios = document.querySelectorAll(\".form-check-input1:checked\");\r\n");
      out.write("				console.log(radios.length);\r\n");
      out.write("				\r\n");
      out.write("				if(username1.value===\"\"){\r\n");
      out.write("					alert(\"빈칸입니다.\"); username1.focus(); return false;\r\n");
      out.write("				}\r\n");
      out.write("				if(radios.length==0){\r\n");
      out.write("					alert(\"라디오 박스를 한 개 이상은 선택하세요\"); return false;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		</script>\r\n");
      out.write("	</div> <!-- end radio -->\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"container card my-5\">\r\n");
      out.write("		<h3 class=\"card-header bg-info text-white\">request(요청)-select</h3>\r\n");
      out.write("		\r\n");
      out.write("		<form action=\"jsp015_select.jsp\" method=\"get\" onsubmit=\"return check3()\">\r\n");
      out.write("			<div class = \"mb-3 mt-3\" >\r\n");
      out.write("			<label for=\"username3\" class=\"form-label\">NAME:</label>\r\n");
      out.write("			<input type=\"text\" class=\"form-control\" id=\"username3\"\r\n");
      out.write("				placeholder=\"사용자 이름을 적어주세요!\" name=\"username\">\r\n");
      out.write("			</div><!-- username -->\r\n");
      out.write("			\r\n");
      out.write("			<!-- select -->\r\n");
      out.write("			<!-- select -->\r\n");
      out.write("			<label for=\"color\">COLOR 선택 :</label>\r\n");
      out.write("			<select class=\"form-select\" id=\"color\" name=\"color\">\r\n");
      out.write("				<option value=\"red\">RED</option>\r\n");
      out.write("				<option value=\"bg-success\">GREEN</option>\r\n");
      out.write("				<option value=\"bg-primary\">BLUE</option>\r\n");
      out.write("				<option value=\"bg-dark\">BLACK</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			<!-- select -->\r\n");
      out.write("			<!-- select -->\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"my-3\">\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary\">전송</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("		<script>\r\n");
      out.write("		function check3(){\r\n");
      out.write("			let username3=document.querySelector(\"#username3\")\r\n");
      out.write("			let color =document.querySelector(\"#color>option:checked\");\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			if(username3.value===\"\"){\r\n");
      out.write("				alert(\"빈칸입니다\");\r\n");
      out.write("				username3.focus(); return false;\r\n");
      out.write("			}\r\n");
      out.write("			if(color.value==\"\"){\r\n");
      out.write("				alert(\"빈칸입니다\"); color.focus(); return false;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		</script>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
